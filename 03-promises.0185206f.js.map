{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACYC,SAASC,cAAc,UAInC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQM,EAAAd,GAASe,OAAOC,QAAQ,uBAAqBX,QAAiBC,QAGpEG,EAAKK,EAAAd,GAASe,OAAOE,QAAQ,sBAAoBZ,QAAeC,OAAW,GAE9EA,EAAM,G,CAbOJ,SAASC,cAAc,SA8B/Be,iBAAiB,UAZXC,IAChBA,EAAEC,iBACF,MAAQd,OAASe,MAAOC,GAAcC,MAAQF,MAAOG,GAAaC,QAAUJ,MAAOK,IAAkBP,EAAEQ,OAAOC,SAE9G,IAAK,IAAIC,EAAQ,EAAGA,EAAQH,EAAaG,GAAS,EAAG,CAGnDzB,EADeyB,EAAM,EADXC,SAASR,GAAYQ,SAASN,GAAWK,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst btn = document.querySelector(\"button\");\nconst currentForm = document.querySelector(\".form\");\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`));\n\n      } else {\n        reject(Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n      }\n    }, delay)\n\n  });\n};\n\nconst onSubmit = (e) => {\n  e.preventDefault();\n  const { delay: { value: delayValue }, step: { value: stepValue }, amount: { value: amountValue } } = e.target.elements;\n\n  for (let index = 0; index < amountValue; index += 1) {\n    let value=parseInt(delayValue)+parseInt(stepValue)*index;\n    let position = index+1;\n    createPromise(position, value)\n       \n   }\n\n}\ncurrentForm.addEventListener(\"submit\", onSubmit);\n\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","failure","addEventListener","e","preventDefault","value","delayValue","step","stepValue","amount","amountValue","target","elements","index","parseInt"],"version":3,"file":"03-promises.0185206f.js.map"}