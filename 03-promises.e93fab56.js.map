{"mappings":"AAAmBA,SAASC,cAAc,qBACxBD,SAASC,cAAc,oBAC1BD,SAASC,cAAc,sBAC5BD,SAASC,cAAc,UA4B5BC,iBAAiB,SAVN,KAChB,IAAK,IAAIC,EAAQ,EAAGA,EAAQ,EAAGA,GAAO,EACpCC,YAAY,KACVC,cAAcF,EAAO,IAAW,IAANA,EAAU,GACnC,IAAW,IAANA,EAAU","sources":["src/js/03-promises.js"],"sourcesContent":["const firstDelay = document.querySelector(\"input[name=delay]\");\nconst delayStep = document.querySelector(\"input[name=step]\");\nconst amount = document.querySelector(\"input[name=amount]\");\nconst btn=document.querySelector(\"button\");\n\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject)=> {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(()=>{\n    if (shouldResolve) {\n      resolve(console.log(`✅ Fulfilled promise ${position} in ${delay}ms`));\n      \n    } else {\n      reject(console.log(`❌ Rejected promise ${position} in ${delay}ms`));\n    }\n  }, delay)\n  \n});\n};\n\nconst onSubmit =() =>{\nfor (let index = 0; index < 3; index+=1) {\n  setTimeout (()=>{\n    shouldResolve(index, 1000+index*500)\n  }, 1000+index*500)\n  \n  \n}\n  \n};\n btn.addEventListener(\"click\", onSubmit);\n\n"],"names":["document","querySelector","addEventListener","index","setTimeout","shouldResolve"],"version":3,"file":"03-promises.e93fab56.js.map"}